{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth-guard.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","tokenGetter","localStorage","getItem","AppModule","config","whitelistedDomains","declarations","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","authService","router","user","username","password","authenticateUser","subscribe","data","success","storeUserData","token","navigate","alert","msg","onLoginSubmit","NavbarComponent","logout","ProfileComponent","console","log","isLoggedIn","getProfile","profile","error","RegisterComponent","validateService","name","email","validateRegister","validateEmail","registerUser","onRegisterSubmit","AuthGuardService","providedIn","AuthService","httpClient","jwtHelper","headers","append","post","loadToken","set","authToken","get","setItem","JSON","stringify","isTokenExpired","clear","ValidateService","undefined","re","test","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { AuthGuardService } from './guards/auth-guard.service';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuardService] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container mt-5\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule  } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n\nexport function tokenGetter() {\n  return localStorage.getItem('id_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter,\n        whitelistedDomains: ['localhost:4200'],\n      }\n    }),\n    AppRoutingModule\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Dashboard</h2>\n\n<p>Welcome to your dashboard</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n  <h1>MEAN Authentication App</h1>\n  <p class=\"lead\">Welcome to our custom MEAN authentication application built from scratch</p>\n  <div>\n    <a class=\"btn btn-primary mr-2\" [routerLink]=\"['/register']\">Register</a>\n    <a class=\"btn btn-dark\" [routerLink]=\"['/login']\">Login</a>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n    <h3>Express Backend</h3>\n    <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>Angular-CLI</h3>\n    <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>JWT Tokens</h3>\n    <p>Full featured authentication using JSON web tokens. Login and store user data</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe(\n      (data: any) => {\n        if (data.success) {\n          this.authService.storeUserData(data.token, data.user);\n          this.router.navigate(['dashboard']);\n          alert('Now you are logged in');\n        } else {\n          alert(data.msg);\n          this.router.navigate(['login']);\n        }\n      }\n    );\n  }\n\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\" />\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\" />\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    alert('You are logged out.');\n    this.router.navigate(['login']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">MEAN Auth App</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav navbar-left\">\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/']\" >Home</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\">\n      <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/dashboard']\" >Dashboard</a>\n      </li>\n      <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/profile']\" >Profile</a>\n      </li>\n      <li *ngIf=\"!authService.isLoggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/login']\" >Login</a>\n      </li>\n      <li *ngIf=\"!authService.isLoggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/register']\" >Register</a>\n      </li>\n      <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"onLogoutClick()\" >Logout</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    console.log('isLoggedIn ', this.authService.isLoggedIn());\n    this.authService.getProfile().subscribe(\n      (profile: any) => {\n        this.user = profile.user;\n      },\n      error => {\n        console.log(error);\n        return false;\n      }\n    );\n  }\n\n}\n","<div *ngIf=\"user\">\n  <h2>{{ user.name }}</h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">\n      Username: {{ user.username }}\n    </li>\n    <li class=\"list-group-item\">\n      Email: {{ user.email }}\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ValidateService } from 'src/app/services/validate.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    };\n\n    // Required Fields\n    if (!this.validateService.validateRegister(user)) {\n      alert('Please fill in all fields');\n      return false;\n    }\n\n    // Validate Email\n    if (!this.validateService.validateEmail(user.email)) {\n      alert('Please use a valid email');\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe(\n      (data: any) => {\n        if (data.success) {\n          alert('You are now registered and can log in');\n          this.router.navigate(['/login']);\n        } else {\n          alert('Something went wrong');\n          this.router.navigate(['/register']);\n        }\n      }\n    );\n  }\n\n}\n","\n<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onRegisterSubmit()\" >\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input\n      type=\"text\"\n      name=\"name\"\n      [(ngModel)]=\"name\"\n      class=\"form-control\"\n      required\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input\n      type=\"text\"\n      name=\"username\"\n      [(ngModel)]=\"username\"\n      class=\"form-control\"\n      required\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input\n      type=\"email\"\n      name=\"email\"\n      [(ngModel)]=\"email\"\n      class=\"form-control\"\n      required\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input\n      type=\"password\"\n      name=\"password\"\n      [(ngModel)]=\"password\"\n      class=\"form-control\"\n      required\n    />\n  </div>\n\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" />\n</form>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authToken: any;\n  user: any;\n\n  constructor(\n    private httpClient: HttpClient,\n    private jwtHelper: JwtHelperService\n  ) { }\n\n  registerUser(user) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.httpClient.post('http://localhost:3000/users/register', user, {headers});\n  }\n\n  authenticateUser(user) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.httpClient.post('http://localhost:3000/users/authenticate', user, {headers});\n  }\n\n  getProfile() {\n    this.loadToken();\n    const headers = new HttpHeaders().set('Authorization', this.authToken);\n    // headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.httpClient.get('http://localhost:3000/users/profile', {headers});\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  isLoggedIn() {\n    return !this.jwtHelper.isTokenExpired();\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user  = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name === undefined || user.email === undefined || user.username === undefined || user.password === undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    // tslint:disable-next-line: max-line-length\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'zone.js';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}